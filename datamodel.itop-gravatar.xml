<?xml version="1.0" encoding="UTF-8"?>
<itop_design version="1.3">
    <classes>
        <class id="Person" _delta="must_exist">
            <methods>
                <method id="Get" _delta="define">
                    <comment>/**
                        * Override for portal rendering which is based on \ormDocument::GetDownloadURL
                        * @uses ormGravatarImage
                        */
                    </comment>
                    <static>false</static>
                    <access>public</access>
                    <type>Overload-DBObject</type>
                    <code><![CDATA[public function Get($sAttCode)
{
    $value = parent::Get($sAttCode);
    if (!$this->IsGravatarPictureAtt($sAttCode))
    {
        return $value;
    }
    if ($value === '')
    {
        return $value;
    }

    $oImageAtt = MetaModel::GetAttributeDef(get_class($this), $sAttCode);

    $sEmailValue = $this->GetGravatarEmailValue();

    $sDefaultImageUrl = $oImageAtt->Get('default_image');

    $iMaxWidth = $oImageAtt->Get('display_max_width');
    $iMaxHeight = $oImageAtt->Get('display_max_height');
    $iMaxSize = max($iMaxWidth, $iMaxHeight);
    $iDefaultMaxSize = $this->GetGravatarDefaultMaxSize();
    $iMaxSize = min($iDefaultMaxSize, $iMaxSize);

    $oOrmGravatar = new ormGravatarImage($value, $sEmailValue, $sDefaultImageUrl, $iMaxSize);

    return $oOrmGravatar;
}
]]></code>
                </method>
                <method id="IsGravatarPictureAtt" _delta="define">
                    <static>false</static>
                    <access>public</access>
                    <type>Custom</type>
                    <code><![CDATA[public function IsGravatarPictureAtt($sAttCode)
{
    return ($sAttCode === 'picture');
}
]]></code>
                </method>
                <method id="GetGravatarEmailValue" _delta="define">
                    <static>false</static>
                    <access>public</access>
                    <type>Custom</type>
                    <code><![CDATA[public function GetGravatarEmailValue()
{
    return $this->Get('email');
}
]]></code>
                </method>
                <method id="GetGravatarDefaultMaxSize" _delta="define">
                    <static>false</static>
                    <access>public</access>
                    <type>Custom</type>
                    <code><![CDATA[public function GetGravatarDefaultMaxSize()
{
    return 512;
}
]]></code>
                </method>
            </methods>
        </class>
    </classes>
</itop_design>
